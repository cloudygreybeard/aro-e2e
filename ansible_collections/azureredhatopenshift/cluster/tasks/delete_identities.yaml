- name: delete_identities | Delete service principal and app
  when: aro_cluster_state.properties.servicePrincipalProfile.clientId | d("") != ""
  block:
    - name: delete_aro_cluster | Get service principal
      # ansible.builtin.command:
      #   argv:
      #     - "az"
      #     - "ad"
      #     - "sp"
      #     - "show"
      #     - "--id={{ aro_cluster_state.servicePrincipalProfile.clientId }}"
      #     - "-o=yaml"
      azure.azcollection.azure_rm_adserviceprincipal_info:
        app_id: "{{ aro_cluster_state.servicePrincipalProfile.clientId }}"
      delegate_to: localhost
      register: aro_ad_sp_info
      # register: aro_ad_sp_output
      changed_when: false
    # - name: delete_aro_cluster | Set fact aro_ad_sp_info
    #   when: aro_ad_sp_output is success
    #   ansible.builtin.set_fact:
    #     aro_ad_sp_info: "{{ aro_ad_sp_output.stdout | from_yaml }}"
    - name: delete_identities | Debug aro_ad_sp_info
      ansible.builtin.debug:
        var: aro_ad_sp_info
      tags:
        - verbose
    - name: delete_identities | Delete service principal
      azure.azcollection.azure_rm_adserviceprincipal:
        app_id: "{{ aro_ad_sp_info.id }}"
        state: absent
      # ansible.builtin.command:
      #   argv:
      #     - az
      #     - ad
      #     - sp
      #     - delete
      #     - --id={{ aro_ad_sp_info.id }}
      register: delete_sp
      delegate_to: localhost
      # changed_when: delete_sp.rc == 0
    - name: delete_identities | Delete ad application
      azure.azcollection.azure_rm_adapplication:
        app_id: "{{ aro_ad_sp_info.appId }}"
        state: absent
      # ansible.builtin.command:
      #   argv:
      #     - az
      #     - ad
      #     - app
      #     - delete
      #     - --id={{ aro_ad_sp_info.appId }}
      register: delete_app
      # changed_when: delete_app.rc == 0
      delegate_to: localhost

- name: delete_identities | Delete platformWorkloadIdentities
  when: aro_cluster_state.properties.platformWorkloadIdentityProfile.platformWorkloadIdentities | d({}) | length > 0
  loop: "{{ aro_cluster_state.properties.platformWorkloadIdentityProfile.platformWorkloadIdentities.items() }}"
  ansible.builtin.command:
    argv:
      - az
      - identity
      - delete
      - --name={{ name }}-{{ item[0] }}
      - --ids={{ item[1] }}
      - --resource-group={{ resource_group }}

- name: delete_identities | Delete Cluster MSI
  when: aro_cluster_state.identity.userAssignedIdentities | d({}) | length > 0
  loop: "{{ aro_cluster_state.identity.userAssignedIdentities.items() }}"
  ansible.builtin.command:
    argv:
      - az
      - identity
      - delete
      - --ids={{ item[0] }}
      - --resource-group={{ resource_group }}
